@inject HttpClient Client

<MudCard>
    <EditForm Model="_model" OnValidSubmit="OnSubmit">
        <FluentValidationValidator />
        <MudCardContent>
            <MudTextField AdornmentColor="@Color.Primary" AdornmentIcon="@Icons.Material.Filled.Title" Adornment="Adornment.End" Variant="Variant.Filled"
                          Label="Title" For="() => _model.Title" @bind-Value="_model.Title" />
            <MudTextField Lines="5" AdornmentColor="@Color.Primary" AdornmentIcon="@Icons.Material.Filled.Description" Adornment="Adornment.End"
                          Variant="Variant.Filled" Label="Description" @bind-Value="_model.Description" />
        </MudCardContent>
        <MudCardActions>
            <MudIconButton Icon="@Icons.Material.Filled.Add" Variant="@Variant.Filled" Size="Size.Large" Color="Color.Primary" ButtonType="ButtonType.Submit" />
        </MudCardActions>
    </EditForm>
</MudCard>

@code {
    private AddProjectRequest _model = new();

    [Parameter] public EventCallback<int> OnAdd { get; set; }

    public async Task OnSubmit()
    {
        var response = await Client.PostAsJsonAsync(Endpoints.Projects, _model);
        var id = await response.Content.ReadFromJsonAsync<int>();

        await OnAdd.InvokeAsync(id);
    }
}

<style>
    .mud-card {
        width: 75%
    }
</style>
